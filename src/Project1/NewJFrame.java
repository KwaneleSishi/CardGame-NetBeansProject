
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Project1;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;

/**
 *
 * @author Kwanele
 */

public class NewJFrame extends javax.swing.JFrame {
 private String loggedInUsername; // Declare loggedInUsername as an instance variable
    private double balance; // Declare loggedInBalance as an instance variable
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame(double balance, String loggedInUsername) {
        this.loggedInUsername = loggedInUsername; // Store the passed username
        this.balance = balance; // Store the passed balance
        initComponents();
        
        jLabel6.setText( loggedInUsername); // Set the username in jLabel2
        jLabel5.setText("Balance: " + balance);   // Set the balance in jLabel5
        
    }

    private NewJFrame(double balance) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

   



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        //jSpinner1 = new javax.swing.JSpinner();
        jSpinner1 = jSpinner1 = new javax.swing.JSpinner();
        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(10, 10, 100, 5));
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/cardBack2.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cards/cardBack2.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, -1, -1));

        jButton1.setBackground(new java.awt.Color(204, 153, 0));
        jButton1.setFont(new java.awt.Font("Castellar", 3, 18)); // NOI18N
        jButton1.setText("Play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, 88, 33));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 153, 0));
        jLabel3.setText("Round");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 147, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 153, 0));
        jLabel4.setText("Status");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 320, 210, -1));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 153, 0));
        jLabel5.setText("Balance");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, 149, -1));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 153, 0));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 90, 240, 30));

        jSpinner1.setToolTipText("10");
        jSpinner1.setBorder(new javax.swing.border.MatteBorder(null));
        jSpinner1.setValue(10);
        jPanel1.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, 88, 28));
        //jSpinner1.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 1))

        jButton3.setBackground(new java.awt.Color(153, 102, 0));
        jButton3.setForeground(new java.awt.Color(204, 153, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Home.icon.png"))); // NOI18N
        jButton3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 51, 0), new java.awt.Color(0, 0, 0), null));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 62, 61));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 153, 0));
        jLabel7.setText("Computer");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 90, 140, -1));

        jLabel9.setForeground(new java.awt.Color(204, 153, 0));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 360, 90, 30));

        jLabel10.setForeground(new java.awt.Color(204, 153, 0));
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 90, 30));

        jLabel11.setForeground(new java.awt.Color(204, 153, 0));
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 90, 30));

        jLabel12.setIcon(new javax.swing.ImageIcon("C:\\Users\\HP\\Pictures\\GameWallpaper3.jpg")); // NOI18N
        jLabel12.setText("jLabel12");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(-7, -4, 910, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private int roundsPlayed =0;
private Deck d1 = new Deck();//initialize object of deck class
int losses=0,wins=0,ties=0;
private int completedGames = 0; // Initialize the number of completed games
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 //location contain the file path or URL of an image that we want to display on jLabel.
    String location = "C:\\Users\\HP\\Documents\\NetBeansProjects\\JavaApplication2-DashBoard\\cards\\";
    String location2 = "C:\\Users\\HP\\Documents\\NetBeansProjects\\JavaApplication2-DashBoard\\cards\\";
    
    if (roundsPlayed < 26) { // Limit the number of rounds to 26
       Card c1 = d1.getPlayerCard();
       Card c2 = d1.getComputerCard();
        
        // Convert the selected value to an integer//Retrieve the selected value as an Object
        int betAmount = (int) jSpinner1.getValue();

        if (c1 != null && c2 != null) {
            location += c1.toString();
            location2 += c2.toString();
            //This line creates an ImageIcon object named originalIcon1 
            //using an image file specified by the location variable.
            
            ImageIcon userIcon1 = new ImageIcon(location);
            jLabel1.setIcon(userIcon1);//This line sets the icon of the jLabel1 Swing component to the originalIcon1 image
            jLabel1.setText("");
            
            ImageIcon computerIcon2 = new ImageIcon(location2);
            jLabel2.setIcon(computerIcon2);
            jLabel2.setText("");
            
            // Compare the cards based on their ranks
            if(c1.getRank()>c2.getRank()){
            wins++;
            balance+=betAmount;
            jLabel4.setText(loggedInUsername+" Wins");
            jLabel5.setText("Balance: " + balance);   // Set the balance in jLabel5
            }
            else if(c1.getRank()< c2.getRank()){
            losses++;
            balance-=betAmount;
            jLabel5.setText("Balance: " + balance);   // Set the balance in jLabel5
            jLabel4.setText("Computer Wins");
            }
            else if(c1.getRank()== c2.getRank()){
            ties++;  
            jLabel4.setText("It's a Tie");
            jLabel5.setText("Balance: " + balance);   // Set the balance in jLabel5
            }
           
            roundsPlayed++; // Increment the rounds played
            jLabel3.setText("Round: " + roundsPlayed+" of 26");
            jLabel11.setText("Wins: " + wins);
            jLabel10.setText("Losses: " + losses);
            jLabel9.setText("Ties: " + ties);
        } else {
            // Handle the case when there are not enough cards in the deck
            
            JOptionPane.showMessageDialog(this, "Not enough cards to continue the game.", "Game Over", JOptionPane.INFORMATION_MESSAGE);
        }
    } else {
        // Display a message when the game is over
        JOptionPane.showMessageDialog(this, "Game Over", "Game Over", JOptionPane.INFORMATION_MESSAGE);
        
        roundsPlayed = 0;
        jLabel3.setText("Round: 0");
        jLabel4.setText(""); // Clear the result label
       
        
    String jdbcUrl = "jdbc:mysql://localhost:3306/cardgame?zeroDateTimeBehavior=CONVERT_TO_NULL";
    String dbUser = "root";
    String dbPassword = "Kwanele@050509";

    try {
        Connection connection = DriverManager.getConnection(jdbcUrl, dbUser, dbPassword);

        String updateQuery = "UPDATE userdata SET balance = ? WHERE username = ?";
         PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);
            preparedStatement.setDouble(1, balance);
            preparedStatement.setString(2, loggedInUsername);

            int rowsUpdated = preparedStatement.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Balance Updated Successfully.", "Balance", JOptionPane.INFORMATION_MESSAGE);
                
            } else {
                JOptionPane.showMessageDialog(this, "Balance Else.", "BalanceElse", JOptionPane.ERROR_MESSAGE);
            }
          // Update the completed games counter and display it
            if (roundsPlayed == 26) {
                completedGames++; // Increment the completed games counter
            }
        
    }catch (SQLException e) {
         JOptionPane.showMessageDialog(this, "Balance Not UPDATED.", "Balance", JOptionPane.ERROR_MESSAGE);
    }
        
        try {
        Connection connection = DriverManager.getConnection(jdbcUrl, dbUser, dbPassword);

        // Insert game results into the history table
        String insertQuery = "INSERT INTO historyg (wins, losses, ties, username) VALUES (?, ?, ?, ?)";
        //PreparedStatement insertStatement = connection.prepareStatement(insertQuery,  Statement.RETURN_GENERATED_KEYS);
          
    // Specify that you want to return the generated keys
        PreparedStatement insertStatement = connection.prepareStatement(insertQuery, Statement.RETURN_GENERATED_KEYS);
        insertStatement.setInt(1, wins);
        insertStatement.setInt(2, losses);
        insertStatement.setInt(3, ties);
        insertStatement.setString(4, loggedInUsername);
        int rowsUpdated = insertStatement.executeUpdate();

if (rowsUpdated > 0) {
    // Retrieve the generated keys (auto-incremented primary key values)
    ResultSet generatedKeys = insertStatement.getGeneratedKeys();
    if (generatedKeys.next()) {
        int generatedGameNumber = generatedKeys.getInt(1); // Assuming 'gameNumber' is in the first column
        // Do something with the generated primary key (if needed)
    }

    JOptionPane.showMessageDialog(this, "Game data inserted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
} else {
    JOptionPane.showMessageDialog(this, "Failed to insert game data.", "Error", JOptionPane.ERROR_MESSAGE);
}

insertStatement.close();
connection.close();
      
    } catch (SQLException e) {
        e.printStackTrace();
    }
     PlayBoard playBoard = new PlayBoard(balance, loggedInUsername);
    playBoard.setVisible(true);
    playBoard.pack();
    playBoard.setLocationRelativeTo(null);

    setVisible(false);
    }  
   
    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         new PlayBoard(balance, loggedInUsername).setVisible(true);
    this.setVisible(false);
  
    }//GEN-LAST:event_jButton3ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            private double balance;
            @Override
            public void run() {
                new NewJFrame(balance).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
